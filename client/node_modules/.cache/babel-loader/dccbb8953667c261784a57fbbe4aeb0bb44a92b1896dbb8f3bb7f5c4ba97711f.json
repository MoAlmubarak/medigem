{"ast":null,"code":"var _jsxFileName = \"/Users/mo.almubarak/GitRepos/medigem/client/src/components/MessageBubble.js\";\n// Use React.memo for components that don't need frequent re-renders\nimport React, { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageBubble = /*#__PURE__*/memo(_c = ({\n  message\n}) => {\n  // Component logic\n  const {\n    text,\n    sender,\n    timestamp\n  } = message;\n  const formatTime = date => {\n    if (!date) return '';\n    const options = {\n      hour: '2-digit',\n      minute: '2-digit'\n    };\n    return new Date(date).toLocaleTimeString([], options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-bubble ${sender}`,\n    children: [sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"MediGem\",\n        children: \"\\uD83D\\uDC8A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bot-name\",\n        children: \"MediGem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), timestamp && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-timestamp\",\n      children: formatTime(timestamp)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n});\n_c2 = MessageBubble;\nexport default MessageBubble;\nvar _c, _c2;\n$RefreshReg$(_c, \"MessageBubble$memo\");\n$RefreshReg$(_c2, \"MessageBubble\");","map":{"version":3,"names":["React","memo","jsxDEV","_jsxDEV","MessageBubble","_c","message","text","sender","timestamp","formatTime","date","options","hour","minute","Date","toLocaleTimeString","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/mo.almubarak/GitRepos/medigem/client/src/components/MessageBubble.js"],"sourcesContent":["// Use React.memo for components that don't need frequent re-renders\nimport React, { memo } from 'react';\n\nconst MessageBubble = memo(({ message }) => {\n  // Component logic\n  const { text, sender, timestamp } = message;\n  \n  const formatTime = (date) => {\n    if (!date) return '';\n    \n    const options = { hour: '2-digit', minute: '2-digit' };\n    return new Date(date).toLocaleTimeString([], options);\n  };\n  \n  return (\n    <div className={`message-bubble ${sender}`}>\n      {sender === 'bot' && (\n        <div className=\"bot-indicator\">\n          <span role=\"img\" aria-label=\"MediGem\">ðŸ’Š</span>\n          <span className=\"bot-name\">MediGem</span>\n        </div>\n      )}\n      <div className=\"message-content\">\n        <p>{text}</p>\n      </div>\n      {timestamp && (\n        <div className=\"message-timestamp\">{formatTime(timestamp)}</div>\n      )}\n    </div>\n  );\n});\n\nexport default MessageBubble;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,gBAAGH,IAAI,CAAAI,EAAA,GAACA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC1C;EACA,MAAM;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGH,OAAO;EAE3C,MAAMI,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;IAEpB,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC;IACtD,OAAO,IAAIC,IAAI,CAACJ,IAAI,CAAC,CAACK,kBAAkB,CAAC,EAAE,EAAEJ,OAAO,CAAC;EACvD,CAAC;EAED,oBACET,OAAA;IAAKc,SAAS,EAAE,kBAAkBT,MAAM,EAAG;IAAAU,QAAA,GACxCV,MAAM,KAAK,KAAK,iBACfL,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5Bf,OAAA;QAAMgB,IAAI,EAAC,KAAK;QAAC,cAAW,SAAS;QAAAD,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/CpB,OAAA;QAAMc,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACN,eACDpB,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9Bf,OAAA;QAAAe,QAAA,EAAIX;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EACLd,SAAS,iBACRN,OAAA;MAAKc,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAER,UAAU,CAACD,SAAS;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAChE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC,CAAC;AAACC,GAAA,GA3BGpB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAC,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}