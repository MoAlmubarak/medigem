{"ast":null,"code":"var _s = $RefreshSig$();\n// client/src/hooks/useMedicationSearch.js\nimport { useState, useCallback } from 'react';\nimport { useMedication } from '../context/MedicationContext';\nimport { useChat } from '../context/ChatContext';\nexport const useMedicationSearch = () => {\n  _s();\n  const [isSearching, setIsSearching] = useState(false);\n  const {\n    searchMedication\n  } = useMedication();\n  const {\n    addMessage\n  } = useChat();\n  const handleSearch = useCallback(async drugName => {\n    if (!drugName.trim() || isSearching) return;\n    setIsSearching(true);\n\n    // Add user message\n    addMessage({\n      text: drugName,\n      sender: 'user'\n    });\n    try {\n      // Search for medication\n      const medicationData = await searchMedication(drugName);\n\n      // Add bot response\n      addMessage({\n        text: `Here's information about ${medicationData.drugInfo.brandName || drugName}:`,\n        sender: 'bot',\n        sideEffects: medicationData // Include full data for display\n      });\n      return medicationData;\n    } catch (error) {\n      console.error('Error searching for drug:', error);\n\n      // Add error message\n      addMessage({\n        text: `I couldn't find information about \"${drugName}\". Please check the spelling or try another medication.`,\n        sender: 'bot'\n      });\n      return null;\n    } finally {\n      setIsSearching(false);\n    }\n  }, [addMessage, searchMedication, isSearching]);\n  return {\n    handleSearch,\n    isSearching\n  };\n};\n_s(useMedicationSearch, \"skF0SnKQXaBMM0Az8nKCDlNe+lc=\", false, function () {\n  return [useMedication, useChat];\n});","map":{"version":3,"names":["useState","useCallback","useMedication","useChat","useMedicationSearch","_s","isSearching","setIsSearching","searchMedication","addMessage","handleSearch","drugName","trim","text","sender","medicationData","drugInfo","brandName","sideEffects","error","console"],"sources":["/Users/mo.almubarak/GitRepos/medigem/client/src/hooks/useMedicationSearch.js"],"sourcesContent":["// client/src/hooks/useMedicationSearch.js\nimport { useState, useCallback } from 'react';\nimport { useMedication } from '../context/MedicationContext';\nimport { useChat } from '../context/ChatContext';\n\nexport const useMedicationSearch = () => {\n  const [isSearching, setIsSearching] = useState(false);\n  const { searchMedication } = useMedication();\n  const { addMessage } = useChat();\n\n  const handleSearch = useCallback(async (drugName) => {\n    if (!drugName.trim() || isSearching) return;\n\n    setIsSearching(true);\n    \n    // Add user message\n    addMessage({\n      text: drugName,\n      sender: 'user',\n    });\n    \n    try {\n      // Search for medication\n      const medicationData = await searchMedication(drugName);\n      \n      // Add bot response\n      addMessage({\n        text: `Here's information about ${medicationData.drugInfo.brandName || drugName}:`,\n        sender: 'bot',\n        sideEffects: medicationData // Include full data for display\n      });\n      \n      return medicationData;\n    } catch (error) {\n      console.error('Error searching for drug:', error);\n      \n      // Add error message\n      addMessage({\n        text: `I couldn't find information about \"${drugName}\". Please check the spelling or try another medication.`,\n        sender: 'bot'\n      });\n      \n      return null;\n    } finally {\n      setIsSearching(false);\n    }\n  }, [addMessage, searchMedication, isSearching]);\n\n  return {\n    handleSearch,\n    isSearching\n  };\n};"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,aAAa,QAAQ,8BAA8B;AAC5D,SAASC,OAAO,QAAQ,wBAAwB;AAEhD,OAAO,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM;IAAEQ;EAAiB,CAAC,GAAGN,aAAa,CAAC,CAAC;EAC5C,MAAM;IAAEO;EAAW,CAAC,GAAGN,OAAO,CAAC,CAAC;EAEhC,MAAMO,YAAY,GAAGT,WAAW,CAAC,MAAOU,QAAQ,IAAK;IACnD,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC,IAAIN,WAAW,EAAE;IAErCC,cAAc,CAAC,IAAI,CAAC;;IAEpB;IACAE,UAAU,CAAC;MACTI,IAAI,EAAEF,QAAQ;MACdG,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAI;MACF;MACA,MAAMC,cAAc,GAAG,MAAMP,gBAAgB,CAACG,QAAQ,CAAC;;MAEvD;MACAF,UAAU,CAAC;QACTI,IAAI,EAAE,4BAA4BE,cAAc,CAACC,QAAQ,CAACC,SAAS,IAAIN,QAAQ,GAAG;QAClFG,MAAM,EAAE,KAAK;QACbI,WAAW,EAAEH,cAAc,CAAC;MAC9B,CAAC,CAAC;MAEF,OAAOA,cAAc;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;;MAEjD;MACAV,UAAU,CAAC;QACTI,IAAI,EAAE,sCAAsCF,QAAQ,yDAAyD;QAC7GG,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,OAAO,IAAI;IACb,CAAC,SAAS;MACRP,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,CAACE,UAAU,EAAED,gBAAgB,EAAEF,WAAW,CAAC,CAAC;EAE/C,OAAO;IACLI,YAAY;IACZJ;EACF,CAAC;AACH,CAAC;AAACD,EAAA,CA/CWD,mBAAmB;EAAA,QAEDF,aAAa,EACnBC,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}