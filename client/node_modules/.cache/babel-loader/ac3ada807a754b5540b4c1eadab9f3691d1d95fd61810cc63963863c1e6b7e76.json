{"ast":null,"code":"var _jsxFileName = \"/Users/mo.almubarak/GitRepos/medigem/client/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\n// client/src/components/ChatInterface.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport MessageBubble from './MessageBubble';\nimport DrugInput from './DrugInput';\nimport SearchHistory from './SearchHistory'; // Import the new component\nimport SideEffectsDisplay from './SideEffectsDisplay';\nimport { searchDrug } from '../services/api';\nimport { useSearchHistory } from '../hooks/useSearchHistory'; // Import the custom hook\nimport '../styles/components/ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hi! I'm MediGem. Ask me about any OTC medication's side effects.\",\n    sender: 'bot',\n    timestamp: new Date()\n  }]);\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Use the custom hook\n  const {\n    searchHistory,\n    addToHistory,\n    clearHistory\n  } = useSearchHistory();\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleDrugSearch = async drugName => {\n    if (!drugName.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      text: drugName,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n\n    // Show loading state\n    setLoading(true);\n    try {\n      // Call API to get drug information\n      const response = await searchDrug(drugName);\n\n      // Add to search history\n      addToHistory(drugName);\n\n      // Add bot response\n      const botMessage = {\n        id: Date.now() + 1,\n        text: `Here's information about ${response.drugInfo.brandName || drugName}:`,\n        sender: 'bot',\n        timestamp: new Date(),\n        sideEffects: response // Include full data for display\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      // Handle error\n      console.error('Error searching for drug:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: `I couldn't find information about \"${drugName}\". Please check the spelling or try another medication.`,\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchHistory, {\n      history: searchHistory,\n      onSelectItem: handleDrugSearch,\n      onClearHistory: clearHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageBubble, {\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), message.sideEffects && /*#__PURE__*/_jsxDEV(SideEffectsDisplay, {\n          sideEffects: message.sideEffects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(MessageBubble, {\n        message: {\n          id: 'loading',\n          text: 'Searching...',\n          sender: 'bot'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrugInput, {\n      onSubmit: handleDrugSearch,\n      isLoading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"KufXyRf8SDxzMHI+xioylnB+S0A=\", false, function () {\n  return [useSearchHistory];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageBubble","DrugInput","SearchHistory","SideEffectsDisplay","searchDrug","useSearchHistory","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","id","text","sender","timestamp","Date","loading","setLoading","messagesEndRef","searchHistory","addToHistory","clearHistory","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleDrugSearch","drugName","trim","userMessage","now","prev","response","botMessage","drugInfo","brandName","sideEffects","error","console","errorMessage","className","children","history","onSelectItem","onClearHistory","fileName","_jsxFileName","lineNumber","columnNumber","map","message","ref","onSubmit","isLoading","_c","$RefreshReg$"],"sources":["/Users/mo.almubarak/GitRepos/medigem/client/src/components/ChatInterface.js"],"sourcesContent":["// client/src/components/ChatInterface.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport MessageBubble from './MessageBubble';\nimport DrugInput from './DrugInput';\nimport SearchHistory from './SearchHistory'; // Import the new component\nimport SideEffectsDisplay from './SideEffectsDisplay';\nimport { searchDrug } from '../services/api';\nimport { useSearchHistory } from '../hooks/useSearchHistory'; // Import the custom hook\nimport '../styles/components/ChatInterface.css';\n\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([\n    { \n      id: 1, \n      text: \"Hi! I'm MediGem. Ask me about any OTC medication's side effects.\", \n      sender: 'bot',\n      timestamp: new Date() \n    }\n  ]);\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  \n  // Use the custom hook\n  const { searchHistory, addToHistory, clearHistory } = useSearchHistory();\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleDrugSearch = async (drugName) => {\n    if (!drugName.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      text: drugName,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    \n    // Show loading state\n    setLoading(true);\n    \n    try {\n      // Call API to get drug information\n      const response = await searchDrug(drugName);\n      \n      // Add to search history\n      addToHistory(drugName);\n      \n      // Add bot response\n      const botMessage = {\n        id: Date.now() + 1,\n        text: `Here's information about ${response.drugInfo.brandName || drugName}:`,\n        sender: 'bot',\n        timestamp: new Date(),\n        sideEffects: response // Include full data for display\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      // Handle error\n      console.error('Error searching for drug:', error);\n      \n      const errorMessage = {\n        id: Date.now() + 1,\n        text: `I couldn't find information about \"${drugName}\". Please check the spelling or try another medication.`,\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {/* Add search history component */}\n      <SearchHistory \n        history={searchHistory} \n        onSelectItem={handleDrugSearch}\n        onClearHistory={clearHistory}\n      />\n      \n      <div className=\"messages-container\">\n        {messages.map(message => (\n          <div key={message.id}>\n            <MessageBubble message={message} />\n            {message.sideEffects && (\n              <SideEffectsDisplay sideEffects={message.sideEffects} />\n            )}\n          </div>\n        ))}\n        {loading && (\n          <MessageBubble \n            message={{ \n              id: 'loading', \n              text: 'Searching...', \n              sender: 'bot'\n            }} \n          />\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      <DrugInput onSubmit={handleDrugSearch} isLoading={loading} />\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}