{"ast":null,"code":"var _jsxFileName = \"/Users/mo.almubarak/GitRepos/medigem/client/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport MessageBubble from './MessageBubble';\nimport DrugInput from './DrugInput';\nimport SideEffectsDisplay from './SideEffectsDisplay';\nimport { searchDrug } from '../services/api';\nimport '../styles/components/ChatInterface.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Hi! I'm MediGem. Ask me about any OTC medication's side effects.\",\n    sender: 'bot',\n    timestamp: new Date()\n  }]);\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleDrugSearch = async drugName => {\n    if (!drugName.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      text: drugName,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n\n    // Show loading state\n    setLoading(true);\n    try {\n      // Call API to get drug information\n      const response = await searchDrug(drugName);\n\n      // Add bot response\n      const botMessage = {\n        id: Date.now() + 1,\n        text: `Here's information about ${response.drugInfo.brandName || drugName}:`,\n        sender: 'bot',\n        timestamp: new Date(),\n        sideEffects: response // Include full data for display\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      // Handle error\n      console.error('Error searching for drug:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        text: `I couldn't find information about \"${drugName}\". Please check the spelling or try another medication.`,\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MessageBubble, {\n          message: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), message.sideEffects && /*#__PURE__*/_jsxDEV(SideEffectsDisplay, {\n          sideEffects: message.sideEffects\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(MessageBubble, {\n        message: {\n          id: 'loading',\n          text: 'Searching...',\n          sender: 'bot'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrugInput, {\n      onSubmit: handleDrugSearch,\n      isLoading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"gsv0xNyPNE24i3uedxyk81rcEfQ=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MessageBubble","DrugInput","SideEffectsDisplay","searchDrug","jsxDEV","_jsxDEV","ChatInterface","_s","messages","setMessages","id","text","sender","timestamp","Date","loading","setLoading","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleDrugSearch","drugName","trim","userMessage","now","prev","response","botMessage","drugInfo","brandName","sideEffects","error","console","errorMessage","className","children","map","message","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","isLoading","_c","$RefreshReg$"],"sources":["/Users/mo.almubarak/GitRepos/medigem/client/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport MessageBubble from './MessageBubble';\nimport DrugInput from './DrugInput';\nimport SideEffectsDisplay from './SideEffectsDisplay';\nimport { searchDrug } from '../services/api';\nimport '../styles/components/ChatInterface.css';\n\nconst ChatInterface = () => {\n  const [messages, setMessages] = useState([\n    { \n      id: 1, \n      text: \"Hi! I'm MediGem. Ask me about any OTC medication's side effects.\", \n      sender: 'bot',\n      timestamp: new Date() \n    }\n  ]);\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom on new messages\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleDrugSearch = async (drugName) => {\n    if (!drugName.trim()) return;\n\n    // Add user message\n    const userMessage = {\n      id: Date.now(),\n      text: drugName,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    \n    // Show loading state\n    setLoading(true);\n    \n    try {\n      // Call API to get drug information\n      const response = await searchDrug(drugName);\n      \n      // Add bot response\n      const botMessage = {\n        id: Date.now() + 1,\n        text: `Here's information about ${response.drugInfo.brandName || drugName}:`,\n        sender: 'bot',\n        timestamp: new Date(),\n        sideEffects: response // Include full data for display\n      };\n      \n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      // Handle error\n      console.error('Error searching for drug:', error);\n      \n      const errorMessage = {\n        id: Date.now() + 1,\n        text: `I couldn't find information about \"${drugName}\". Please check the spelling or try another medication.`,\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages-container\">\n        {messages.map(message => (\n          <div key={message.id}>\n            <MessageBubble message={message} />\n            {message.sideEffects && (\n              <SideEffectsDisplay sideEffects={message.sideEffects} />\n            )}\n          </div>\n        ))}\n        {loading && (\n          <MessageBubble \n            message={{ \n              id: 'loading', \n              text: 'Searching...', \n              sender: 'bot'\n            }} \n          />\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      <DrugInput onSubmit={handleDrugSearch} isLoading={loading} />\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}